// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        return linux;
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'YOUR_API_KEY', // REPLACE WITH YOUR WEB API KEY
    appId: 'YOUR_APP_ID', // REPLACE WITH YOUR WEB APP ID
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID', // REPLACE WITH YOUR WEB MESSAGING SENDER ID
    projectId: 'YOUR_PROJECT_ID', // REPLACE WITH YOUR WEB PROJECT ID
    authDomain: 'YOUR_AUTH_DOMAIN', // REPLACE WITH YOUR WEB AUTH DOMAIN
    storageBucket: 'YOUR_STORAGE_BUCKET', // REPLACE WITH YOUR WEB STORAGE BUCKET
    measurementId: 'YOUR_MEASUREMENT_ID', // REPLACE WITH YOUR WEB MEASUREMENT ID
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'YOUR_API_KEY', // REPLACE WITH YOUR ANDROID API KEY
    appId: 'YOUR_APP_ID', // REPLACE WITH YOUR ANDROID APP ID
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID', // REPLACE WITH YOUR ANDROID MESSAGING SENDER ID
    projectId: 'YOUR_PROJECT_ID', // REPLACE WITH YOUR ANDROID PROJECT ID
    storageBucket: 'YOUR_STORAGE_BUCKET', // REPLACE WITH YOUR ANDROID STORAGE BUCKET
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'YOUR_API_KEY', // REPLACE WITH YOUR IOS API KEY
    appId: 'YOUR_APP_ID', // REPLACE WITH YOUR IOS APP ID
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID', // REPLACE WITH YOUR IOS MESSAGING SENDER ID
    projectId: 'YOUR_PROJECT_ID', // REPLACE WITH YOUR IOS PROJECT ID
    storageBucket: 'YOUR_STORAGE_BUCKET', // REPLACE WITH YOUR IOS STORAGE BUCKET
    iosClientId: 'YOUR_IOS_CLIENT_ID', // REPLACE WITH YOUR IOS CLIENT ID
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'YOUR_API_KEY', // REPLACE WITH YOUR MACOS API KEY
    appId: 'YOUR_APP_ID', // REPLACE WITH YOUR MACOS APP ID
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID', // REPLACE WITH YOUR MACOS MESSAGING SENDER ID
    projectId: 'YOUR_PROJECT_ID', // REPLACE WITH YOUR MACOS PROJECT ID
    storageBucket: 'YOUR_STORAGE_BUCKET', // REPLACE WITH YOUR MACOS STORAGE BUCKET
    iosClientId: 'YOUR_MACOS_CLIENT_ID', // REPLACE WITH YOUR MACOS CLIENT ID
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'YOUR_API_KEY', // REPLACE WITH YOUR WINDOWS API KEY
    appId: 'YOUR_APP_ID', // REPLACE WITH YOUR WINDOWS APP ID
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID', // REPLACE WITH YOUR WINDOWS MESSAGING SENDER ID
    projectId: 'YOUR_PROJECT_ID', // REPLACE WITH YOUR WINDOWS PROJECT ID
    storageBucket: 'YOUR_STORAGE_BUCKET', // REPLACE WITH YOUR WINDOWS STORAGE BUCKET
  );

  static const FirebaseOptions linux = FirebaseOptions(
    apiKey: 'YOUR_API_KEY', // REPLACE WITH YOUR LINUX API KEY
    appId: 'YOUR_APP_ID', // REPLACE WITH YOUR LINUX APP ID
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID', // REPLACE WITH YOUR LINUX MESSAGING SENDER ID
    projectId: 'YOUR_PROJECT_ID', // REPLACE WITH YOUR LINUX PROJECT ID
    storageBucket: 'YOUR_STORAGE_BUCKET', // REPLACE WITH YOUR LINUX STORAGE BUCKET
  );
}
